#  ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
#  ┃ ██████ ██████ ██████       █      █      █      █      █ █▄  ▀███ █       ┃
#  ┃ ▄▄▄▄▄█ █▄▄▄▄▄ ▄▄▄▄▄█  ▀▀▀▀▀█▀▀▀▀▀ █ ▀▀▀▀▀█ ████████▌▐███ ███▄  ▀█ █ ▀▀▀▀▀ ┃
#  ┃ █▀▀▀▀▀ █▀▀▀▀▀ █▀██▀▀ ▄▄▄▄▄ █ ▄▄▄▄▄█ ▄▄▄▄▄█ ████████▌▐███ █████▄   █ ▄▄▄▄▄ ┃
#  ┃ █      ██████ █  ▀█▄       █ ██████      █      ███▌▐███ ███████▄ █       ┃
#  ┣━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┫
#  ┃ Copyright (c) 2017, the Perspective Authors.                              ┃
#  ┃ ╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌ ┃
#  ┃ This file is part of the Perspective library, distributed under the terms ┃
#  ┃ of the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0). ┃
#  ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: Build Status

on:
    push:
        branches:
            - master
        tags:
            - v*
        paths-ignore:
            - AUTHORS
            - CHANGELOG.md
            - CONTRIBUTING.md
            - LICENSE
            - README.md
            - binder/
            - docs/
            - examples/
            - rust/perspective-python/README.md
    pull_request:
        branches:
            - master
    workflow_dispatch:
        inputs:
            ci-full:
                description: "Run Full CI"
                required: false
                type: boolean
                default: false
            ci-skip-cache:
                description: "Omit Cache from CI run"
                required: false
                type: boolean
                default: false
            ci-skip-python:
                description: "Skip Python components of CI"
                required: false
                type: boolean
                default: false
            ci-include-windows:
                description: "Include Windows (Python) components of CI"
                required: false
                type: boolean
                default: false

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    # ,-,---.       .    .   ,-_/              .---.               .
    #  '|___/ . . . |  ,-|   '  | ,-. .  , ,-. \___  ,-. ,-. . ,-. |-
    #  ,|   \ | | | |  | |      | ,-| | /  ,-|     \ |   |   | | | |
    # `-^---' `-^ ' `' `-^      | `-^ `'   `-^ `---' `-' '   ' |-' `'
    #                        /` |                              |
    #                        `--'                              '
    build_js:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                python-version:
                    - 3.9
                node-version: [20.x]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Maximize build space
              if: ${{ contains(matrix.os, 'ubuntu') }}
              shell: bash
              run: |
                  df -h
                  sudo rm -rf /usr/share/dotnet
                  sudo rm -rf /usr/local/lib/android
                  sudo rm -rf /opt/ghc
                  sudo rm -rf /opt/hostedtoolcache/CodeQL
                  sudo rm -rf /usr/local/share/powershell
                  sudo rm -rf /usr/share/swift
                  df -h

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              id: init-step
              uses: ./.github/actions/install-deps
              with:
                  python: "false"
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - name: WebAssembly Build
              run: pnpm run build --ci
              env:
                  PACKAGE: "!perspective-python,!perspective-jupyterlab"
                  # PSP_USE_CCACHE: 1

            # - name: Docs Build
            #   run: pnpm run docs

            # - name: Lint
            #   run: pnpm run lint
            #   env:
            #       PACKAGE: "!perspective-python,!perspective-jupyterlab"

            - uses: actions/upload-artifact@v4
              with:
                  name: perspective-js-dist
                  path: |
                      rust/perspective-js/dist/
                      rust/perspective-viewer/dist
                      packages/perspective-jupyterlab/dist/
                      packages/perspective-viewer-d3fc/dist
                      packages/perspective-viewer-datagrid/dist
                      packages/perspective-viewer-openlayers/dist
                      packages/perspective-esbuild-plugin/dist
                      packages/perspective-webpack-plugin/dist
                      packages/perspective-cli/dist
                      packages/perspective-workspace/dist

    # ,-,---.       .    .  .-,--.     .  .
    #  '|___/ . . . |  ,-|   '|__/ . . |- |-. ,-. ,-.
    #  ,|   \ | | | |  | |   ,|    | | |  | | | | | |
    # `-^---' `-^ ' `' `-^   `'    `-| `' ' ' `-' ' '
    #                               /|
    #                              `-'
    build_python:
        runs-on: ${{ matrix.os }}
        container: ${{ matrix.container }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                    - macos-13
                    - windows-2022
                arch:
                    - aarch64
                    - x86_64
                python-version:
                    - 3.9
                node-version: [20.x]
                include:
                    - os: ubuntu-22.04
                      arch: x86_64
                      python-version: 3.9
                      container: pagmo2/manylinux228_x86_64_with_deps
                exclude:
                    - os: windows-2022
                      arch: aarch64
                    - os: ubuntu-22.04
                      arch: aarch64

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              id: init-step
              uses: ./.github/actions/install-deps
              with:
                  javascript: "false"
                  arch: ${{ matrix.arch }}
                  manylinux: ${{ matrix.container && 'true' || 'false' }}
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - run: echo "/opt/python/cp39-cp39/bin" >> $GITHUB_PATH
              if: ${{  runner.os == 'Linux' }}

            # https://github.com/apache/arrow/issues/38391
            - if: ${{ runner.os == 'macOS' }}
              run: echo "MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion)" >> $GITHUB_ENV

            - run: echo "${{ steps.init-step.outputs.VCPKG_INSTALLATION_ROOT }}" >> $env:GITHUB_PATH
              if: ${{ runner.os == 'Windows' }}

            - name: Python Build
              run: pnpm run build
              if: ${{ !contains(matrix.os, 'windows') }}
              env:
                  PACKAGE: "perspective-python"
                  PSP_ARCH: ${{ matrix.arch }}
                  CI: 1

            - name: Python Build Pyodide
              run: pnpm install && pnpm run build
              if: ${{ runner.os == 'Linux' && matrix.arch == 'x86_64' }}
              env:
                  PSP_PYODIDE: 1
                  PACKAGE: "perspective-python"
                  CI: 1

            - name: Python Build (Windows)
              run: |
                  New-Item -ItemType Directory -Path $env:CARGO_TARGET_DIR -Force
                  pnpm run build
              if: ${{ contains(matrix.os, 'windows') }}
              env:
                  CARGO_TARGET_DIR: D:\psp-rust
                  PSP_ROOT_DIR: ${{ github.workspace }}
                  VCPKG_ROOT: ${{ steps.init-step.outputs.VCPKG_INSTALLATION_ROOT }}
                  PACKAGE: "perspective-python"
                  # PSP_USE_CCACHE: 1
                  PSP_ARCH: ${{ matrix.arch }}
                  CI: 1

            # Windows sucks lol
            - uses: actions/upload-artifact@v4
              if: ${{ runner.os == 'Windows' }}
              with:
                  name: perspective-python-dist-${{ matrix.arch}}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: D:\psp-rust\wheels\*.whl

            - uses: actions/upload-artifact@v4
              # if: ${{ runner.os != 'Windows' }}
              with:
                  name: perspective-python-dist-${{ matrix.arch}}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: rust/target/wheels/*.whl

    build_emscripten_wheel:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                arch:
                    - x86_64
                python-version:
                    - 3.9
                node-version: [20.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              id: init-step
              uses: ./.github/actions/install-deps
              with:
                  javascript: "false"
                  arch: ${{ matrix.arch }}
                  manylinux: ${{ matrix.container && 'true' || 'false' }}
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - run: echo "/opt/python/cp39-cp39/bin" >> $GITHUB_PATH
              if: ${{  runner.os == 'Linux' }}

            - name: Python Build Pyodide
              run: pnpm install && pnpm run build
              if: ${{ runner.os == 'Linux' && matrix.arch == 'x86_64' }}
              env:
                  PSP_PYODIDE: 1
                  PACKAGE: "perspective-python"
                  CI: 1

            - uses: actions/upload-artifact@v4
              # if: ${{ runner.os != 'Windows' }}
              with:
                  name: perspective-python-dist-${{ matrix.arch}}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: rust/target/wheels/*.whl

    # ,-,---.       .    .             .   ,--,--'      .
    #  '|___/ . . . |  ,-|   ,-. ,-. ,-|   `- | ,-. ,-. |-
    #  ,|   \ | | | |  | |   ,-| | | | |    , | |-' `-. |
    # `-^---' `-^ ' `' `-^   `-^ ' ' `-^    `-' `-' `-' `'
    #
    # ,-_/             .          .      .
    # '  | . . ,-. . . |- ,-. ,-. |  ,-. |-.
    #    | | | | | | | |  |-' |   |  ,-| | |
    #    | `-^ |-' `-| `' `-' '   `' `-^ ^-'
    # /` |     |    /|
    # `--'     '   `-'
    #
    build_and_test_juptyerlab:
        needs: [build_js, build_python]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                    - macos-13
                    - windows-2022
                arch:
                    - aarch64
                    - x86_64
                python-version:
                    - 3.9
                node-version: [20.x]
                exclude:
                    - os: windows-2022
                      arch: aarch64
                    - os: ubuntu-22.04
                      arch: aarch64

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              id: init-step
              uses: ./.github/actions/install-deps
              with:
                  rust: "false"
                  cpp: "false"
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - uses: actions/download-artifact@v4
              with:
                  name: perspective-js-dist
                  path: .

            - uses: actions/download-artifact@v4
              with:
                  name: perspective-python-dist-${{ matrix.arch }}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: .

            - name: Build extension
              run: pnpm run build
              env:
                  PACKAGE: "perspective-jupyterlab"

            - run: node tools/perspective-scripts/repack_wheel.mjs

            - uses: actions/upload-artifact@v4
              with:
                  name: perspective-python-dist-${{ matrix.arch}}-${{ matrix.os }}-${{ matrix.python-version }}
                  path: "*.whl"
                  overwrite: true

            # - uses: actions/upload-artifact@v4
            #   if: ${{ runner.os == 'Linux' }}
            #   with:
            #       name: perspective-python-sdist
            #       path: rust/target/wheels/*.tar.gz

            - uses: ./.github/actions/install-wheel
              if: ${{ runner.os == 'Linux' }}

            - name: Run Jupyter Tests
              if: ${{ false }}
              run: |
                  jupyter lab --generate-config
                  pnpm run test --jupyter
              env:
                  PACKAGE: "perspective-jupyterlab"
                  # PSP_USE_CCACHE: 1

    #  ,--,--'      .    ,-_/              .---.               .
    #  `- | ,-. ,-. |-   '  | ,-. .  , ,-. \___  ,-. ,-. . ,-. |-
    #   , | |-' `-. |       | ,-| | /  ,-|     \ |   |   | | | |
    #   `-' `-' `-' `'      | `-^ `'   `-^ `---' `-' '   ' |-' `'
    #                   /` |                              |
    #                   `--'                              '
    test_js:
        needs: [build_js]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                python-version:
                    - 3.9
                node-version: [20.x]

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              uses: ./.github/actions/install-deps
              with:
                  python: "false"
                  rust: "false"
                  cpp: "false"
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - uses: actions/download-artifact@v4
              with:
                  name: perspective-js-dist
                  path: .

            - name: Run Tests
              run: pnpm run test
              env:
                  PACKAGE: "!perspective-python,!perspective-jupyterlab"
                  # PSP_USE_CCACHE: 1

    # ,--,--'      .   .-,--.     .  .
    # `- | ,-. ,-. |-   '|__/ . . |- |-. ,-. ,-.
    #  , | |-' `-. |    ,|    | | |  | | | | | |
    #  `-' `-' `-' `'   `'    `-| `' ' ' `-' ' '
    #                          /|
    #                         `-'
    test_python:
        needs: [build_python]
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-22.04
                    - macos-13
                    - windows-2022
                python-version:
                    - 3.9
                    # - 3.12
                node-version: [20.x]
                arch:
                    - x86_64
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Config
              id: config-step
              uses: ./.github/actions/config

            - name: Initialize Build
              uses: ./.github/actions/install-deps
              with:
                  rust: "false"
                  cpp: "false"
                  skip_cache: ${{ steps.config-step.outputs.SKIP_CACHE }}

            - uses: actions/download-artifact@v4
              with:
                  name: perspective-python-dist-${{ matrix.arch }}-${{ matrix.os }}-${{ matrix.python-version }}

            - uses: ./.github/actions/install-wheel

            - name: Run Tests
              run: pnpm run test
              env:
                  PACKAGE: "perspective-python"
                  # PSP_USE_CCACHE: 1
